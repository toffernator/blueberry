@page "/interests"
@attribute [Authorize]
@inject NavigationManager Navigation


<PageTitle>Interests</PageTitle>

<div class="pageContent">
    <div class="chosentags">
        <div class="tagTitle">
            <h3> Chosen tags</h3>
        </div>
        <div class="tags">
            @foreach (var tag in chosenTags)
                     {
                         <span class="badge rounded-pill bg-primary tag" @onclick="() => removeFromChosenTags(tag.Item1)" >@tag.Item1</span> 
                     }
        </div>
    </div>
    <div class="searchForTags">
        <div class="searchComponent">
            <input class="searchbar" type="text" placeholder="Search" />
            <button class="searchbutton" type="button">
                <span>
                    <i class="fa-solid fa-magnifying-glass searchIcon"></i>
                </span>
            </button>
        </div>
        <div class="tags">
             @foreach (var tag in tags)
                     {
                         <span class="badge rounded-pill bg-secondary tag" @onclick="() => addToChosenTags(tag.Item1)" >@tag.Item1</span> 
                     }
        </div>
        <nav aria-label="Page navigation example tagNav">
            <ul class="pagination justify-content-center">
                <li class="page-item disabled">
                    <a class="page-link">Previous</a>
                </li>
                <li class="page-item"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item">
                    <a class="page-link" href="#">Next</a>
                </li>
            </ul>
        </nav>

    </div>
</div>
<div class="d-grid gap-2 col-6 mx-auto">
    <button class="btn btn-primary" type="button" @onclick="done">Done</button>
</div>


@code {

    IEnumerable<(string, bool)> tags = new (string,bool)[] {("React", false),("Bootstrap", false),("Blazor", false),("HTML",false),("Java",false),("JavaScript",false),("CSS",false),("VS-code",false),("UML",false),("RAD",false),("Software engeneering",false),("Lamport timestamps",false),("Testing",false),("Unit-Testing",false),("Flutter",false),("ACID",false),("API",false)};
    IEnumerable<(string, bool)> chosenTags = new (string,bool)[] {("React", true),("Bootstrap", true),("Blazor", true),("Flutter",true)}; 

    void done()
    {
        Navigation.NavigateTo("");

    }

    
    void addToChosenTags(string tagName){
        var temp = (tagName, true);
        chosenTags = chosenTags.Append(temp);
    

    }
    void removeFromChosenTags(string tagName){

        chosenTags = chosenTags.Where(x => x.Item1 != tagName);

    }


}