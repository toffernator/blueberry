@page "/blueberry/"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
<RemoteAuthenticatorView Action="@Action" />
@using Microsoft.AspNetCore.Components.Authorization
@using System.Collections


@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        Hello, @context.User.Identity?.Name!
        <button class="nav-link btn btn-link" @onclick="BeginLogout">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="authentication/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>



<PageTitle>Index</PageTitle>
<div class="searchModule" >
    <div class="searchComponent"  >
        <input class="searchbar" type="text" placeholder="Search" />
         <button class="searchbutton" type="button">
             <span>
                <i class="fa-solid fa-magnifying-glass"></i>
             </span>
        </button>
    </div>
    <div class="filters">
        <div class="btn-group">
            <button class="btn btn-secondary btn-sm dropdown-toggle filterButton" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                Sort by
            </button>
            <ul class="dropdown-menu">
                    <li><button class="dropdown-item" type="button">Most relevent</button></li>
                    <li><button class="dropdown-item" type="button">Newest</button></li>
                    <li><button class="dropdown-item" type="button">Oldest</button></li>
            </ul>
        </div>


        <div class="btn-group">
            <button class="btn btn-secondary btn-sm dropdown-toggle filterButton" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                Tags
                <span class="badge bg-primary rounded-pill">3</span> <!-- number of tags chosen -->
            </button>
            <ul class="dropdown-menu">
                <li>
                    <input class="searchbarForTags" type="text" placeholder="Search for tags" />
                </li>
                <li>
                     @foreach (var tag in tags)
                     {
                         <span class="badge bg-primary rounded-pill tag">@tag</span>
                     }
                </li>
                <li><label class="dropdown-item clearAll" type="label"> clear all</label></li>
            </ul>
        </div>

        <div class="btn-group">
            <button class="btn btn-secondary btn-sm dropdown-toggle filterButton" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                Year
            </button>
            <ul class="dropdown-menu">
                <li>
                    <p style="margin-top: 2rem">Year</p>
                    <RadzenSlider Range="true" class="slider" @bind-Value=@values Min="1970" Max="2021" TValue="IEnumerable<int>" Change=@(args => OnChange(args, "Year")) />
                </li>
            </ul>
        </div>
    </div>
</div>

@code {
    IEnumerable<string> tags = new string[] {"React","Bootstrap","Blazor","Flutter"};

    [Parameter] public string? Action { get; set; }

    private async Task BeginLogout(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
    private int inputValue = 123;   
        
    //IEnumerable<int> values = new int[] { 1930, 2021 };
    IEnumerable<int> values = new int[] { 1970, 2021 };
    void OnChange(dynamic value, string name)
    {
        var str = value is IEnumerable ? string.Join(", ", value) : value;
    }
}
